// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Webapi__Dom__Document = require("rescript-webapi/src/Webapi/Dom/Webapi__Dom__Document.res.js");

function getCookie(name) {
  var doc = Webapi__Dom__Document.asHtmlDocument(document);
  if (doc === undefined) {
    return ;
  }
  var cookieStr = Caml_option.valFromOption(doc).cookie;
  var matchingCookies = Belt_Array.keep(cookieStr.split(";"), (function (c) {
          return c.trim().startsWith(name + "=");
        }));
  var cookie = Belt_Array.get(matchingCookies, 0);
  if (cookie === undefined) {
    return ;
  }
  var trimmedCookie = cookie.trim();
  var len = name.length;
  return decodeURIComponent(trimmedCookie.substring(len + 1 | 0, trimmedCookie.length));
}

async function fetchComments(postId, commentList) {
  try {
    var response = await fetch("/post/" + postId + "/comments/");
    if ((!response).ok) {
      ((throw new Error("Failed to fetch comments")));
    }
    var data = await response.json();
    commentList.innerHTML = "";
    return Belt_Array.forEach(data, (function (comment) {
                  var li = document.createElement("li");
                  var username = comment.author_username;
                  var authorName = username !== undefined ? username : "Anonymous";
                  li.textContent = authorName + ": " + comment.body;
                  commentList.appendChild(li);
                }));
  }
  catch (exn){
    console.error("Error fetching comments:", (arguments[0]));
    commentList.innerHTML = "<li>Error loading comments. Please refresh the page.</li>";
    return ;
  }
}

export async function submitComment(postId, content, commentList) {
    try {
        const response = await fetch('/post/' + postId + '/comments/', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRFToken': getCookie('csrftoken')
            },
            body: JSON.stringify({ body: content })
        });

        if (!response.ok) {
            throw new Error('Failed to post comment');
        }

        // Refresh comments after successful submission
        await fetchComments(postId, commentList);
        return true;
    } catch (error) {
        console.error('Error submitting comment:', error);
        alert('Failed to post comment. Please try again.');
        return false;
    }
}
;

exports.getCookie = getCookie;
exports.fetchComments = fetchComments;
/*  Not a pure module */
